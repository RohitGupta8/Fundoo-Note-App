{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Fundoo Note Application",
        "description": "Fundoo Notes Application",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:4000",
    "basePath": "/",
    "tags": [],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Sign up"
                ],
                "description": "Registration of new user",
                "parameters": [
                    {
                        "name": "Register",
                        "in": "body",
                        "description": "Sign Up..",
                        "schema": {
                            "$ref": "#/definitions/register"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Successfully  Registered......"
                    },
                    "409": {
                        "description": "User already exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Sign in"
                ],
                "description": "Login user",
                "parameters": [
                    {
                        "name": "Login",
                        "in": "body",
                        "description": "Sign in",
                        "schema": {
                            "$ref": "#/definitions/login"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/forgotPassword": {
            "post": {
                "tags": [
                    "Forgot-Password"
                ],
                "description": "Send OTP for Password Reset to email",
                "parameters": [
                    {
                        "name": "forgotpassword",
                        "in": "body",
                        "description": "Send OTP to Email for reset Password",
                        "schema": {
                            "$ref": "#/definitions/forgotPassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/resetPassword": {
            "patch": {
                "tags": [
                    "Reset-Password"
                ],
                "description": "Already registered ? Then reset password successfully !!",
                "parameters": [
                    {
                        "name": "Reset Password",
                        "in": "body",
                        "description": "Reset Password by OTP code",
                        "schema": {
                            "$ref": "#/definitions/resetPassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "reset password succesfully !!"
                    },
                    "400": {
                        "description": "wrong otp entered / otp expired...."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/createNote": {
            "post": {
                "tags": [
                    "Create Notes"
                ],
                "description": "Create a  note !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "create note",
                        "in": "body",
                        "description": "Note's body",
                        "schema": {
                            "$ref": "#/definitions/createNote"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/createNote"
                },
                "responses": {
                    "201": {
                        "description": "Create note succesfully !!"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/getNote": {
            "get": {
                "tags": [
                    "Get All Notes"
                ],
                "description": "Get all note !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/getNote"
                },
                "responses": {
                    "201": {
                        "description": "Succesfully !! retrieve all notes."
                    },
                    "401": {
                        "description": "Please enter Valid Token/ or add bearer before token..."
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/getNote/{id}": {
            "get": {
                "tags": [
                    "Get Notes By Id"
                ],
                "description": "Get a note by ID for specific person id",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Note id for retrieve note",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/getNoteById"
                },
                "responses": {
                    "201": {
                        "description": "get note succesfully !!"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/updateNote/{id}": {
            "put": {
                "tags": [
                    "Update Notes By Id"
                ],
                "description": "Update a Specific note id !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of note you want to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "body",
                        "name": "note",
                        "description": "Note body",
                        "schema": {
                            "$ref": "#/definitions/updatenotes"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "update note succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/deleteNote/{id}": {
            "delete": {
                "tags": [
                    "Delete Notes By Id"
                ],
                "description": "Delete a note by ID ",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of note you want to Delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Delete note succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/addLabel/{id}": {
            "post": {
                "tags": [
                    "Add Label by NoteID"
                ],
                "description": "Add Label",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Note id",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "body",
                        "name": "addlabel",
                        "description": "Label to be updated",
                        "schema": {
                            "$ref": "#/definitions/addlabel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "label added"
                    },
                    "500": {
                        "description": "Failed to add label"
                    },
                    "400": {
                        "description": "Invalid Token"
                    }
                }
            }
        },"/getLabel": {
            "get": {
                "tags": [
                    "Get All Labels"
                ],
                "description": "Gets All Labels",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "labels retrieved"
                    },
                    "500": {
                        "description": "Couldnt retrieve labels"
                    }
                }
            }
        },
        "/getLabel/{id}": {
            "get": {
                "tags": [
                    "Get Label By Id"
                ],
                "description": "Gets Label By Id",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Label id",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "label Found"
                    },
                    "500": {
                        "description": "label not Found"
                    },
                    "400": {
                        "description": "Invalid Token"
                    }
                }
            }
        }
        
    },
    "definitions": {
        "register": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "forgotPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "createNote": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "getNote": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "getNoteById": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "updatenotes": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "addlabel": {
            "type": "object",
            "properties": {
                "labelName": {
                    "type": "string"
                }
            }
        }
    }
    
}